/* For styling the rendered Markdown */

/* increase text weight and size for readability on hi res monitors */
body {
	font-weight : 300;
	font-size : 18pt;
	line-height : 1.42em;
}

/* widen default horizontal and vertical scrollbars */
::-webkit-scrollbar {
	width : 18px;
	height : 18px !important;
}

/* reduce inline (joplin) icon size */
.resource-icon {
	top : .2em;
	width : 0.75em;
	height : 0.9em;
}

/* unordered (bulleted) list spacing */
ul, ol {
	line-height : 1.17em;
	margin-top : 3px;
	margin-left : 1.2em;
}

li {
	margin-bottom : 3.6px;
}

/* list - nested paragraph fix; precedes markdown links within lists (edge case) */
li p {
	margin-top : -28px;
}

/* begin colored and additional bullets */
ul {
	list-style : none
}

 /* default bullets • = "\2022", ◦ = \25E6" and ▪ = "\25AA"  */

/* • */
ul > li::before {
	content : "\2022";
	color : #7728ab;
	display : inline-block;
	width : 1em;
	margin-left : -1em;
	position : relative;
	top : 2px;
	left : 3px;
	font-weight : 600;
	font-size : 20pt;
	line-height : 1em;
}

/* ◦ */
ul > li > ul > li::before {
	content : "\25E6";
	color : #00fffd;
}

/* ▪ */
ul > li > ul > li > ul > li::before {
	content : "\25AA";
	color : #2a7c38;
}

/* ► */
ul > li > ul > li > ul > li > ul > li::before {
	content : "\25BA";
	color : #8b84ff;
	top : -2px;
	left : -4px;
	font-size : 12pt;
}

/* ♦ */
ul > li > ul > li > ul > li > ul > li > ul > li::before {
	content : "\2666";
	color : #7c451f;
	top : 1px;
	left : 3px;
	font-size : 20pt;
}

/* ◌ */
ul > li > ul > li > ul > li > ul > li > ul > li > ul > li::before {
	content : "\25CC";
	color : #ed00ff;
}

/* ֍ */
ul > li > ul > li > ul > li > ul > li > ul > li > ul > li > ul > li::before {
	content : "\058D";
	color : #fc7007;
	top : -3px;
	left : -9px;
	font-size : 13pt;
}

/* ҉ */
ul > li > ul > li > ul > li > ul > li > ul > li > ul > li > ul > li > ul > li::before {
	content : "\0489";
	color : #0defe0;
	top : -1px;
	left : -2px;
	font-size : 12pt;
}

/* ۞ */
ul > li > ul > li > ul > li > ul > li > ul > li > ul > li > ul > li > ul > li > ul > li::before {
	content : "\06DE";
	color : #6495ED;
	top : -3px;
	left : -12px;
	font-size : 12pt;
}

/* end colored and additional bullets */



/* begin colored ordered list numeric prefixes */


ol {
	list-style : none;
	counter-reset : count;
}

ol > li:before {
	content : counter(count) ". ";
	counter-increment : count;
	display : inline-block;
	width : 2em;
	margin-left : -2.5em;
	margin-right : 0.5em;
	text-align : right;
	color : #7728ab;
}

ol > li > ol > li::before {
	color : #00fffd;
}

ol > li > ol > li > ol > li::before {
	color : #2a7c38;
}

ol > li > ol > li > ol > li > ol > li::before {
	color : #8b84ff;
}

ol > li > ol > li > ol > li > ol > li > ol > li::before {
	color : #7c451f;
}

ol > li > ol > li > ol > li > ol > li > ol > li > ol > li::before {
	color : #ed00ff;
}

ol > li > ol > li > ol > li > ol > li > ol > li > ol > li > ol > li::before {
	color : #fc7007;
}

ol > li > ol > li > ol > li > ol > li > ol > li > ol > li > ol > li > ol > li::before {
	color : #0defe0;
}

ol > li > ol > li > ol > li > ol > li > ol > li > ol > li > ol > li > ol > li > ol > li::before {
	color : #6495ED;
}

/* end colored ordered list numeric prefixes */


/* inline display of checkboxes within lists */
li.md-checkbox.joplin-checkbox > div.checkbox-wrapper {
	display : inline;
	margin-inline-start : 26px;
}



/* add horizontal rule to headers */
h1, h2, h3, h4, h5
{
	border-bottom : #ff8c2f 1px solid !important;
}

/* colorize horizontal rule */
hr 
{
	border-bottom : 2px solid #548281 !important;
}

/* bold */
strong {
	color : #5FA2D0;
	font-weight : 600;
}

/* italic */
em {
	color : #616dad;
}

blockquote {
	font-style : italic !important;
}

.inline-code
{
	color : #B18EB1 !important;
}

/* inline code italics */
em .inline-code
{
    color : #ed00ff !important;
}

/* inline code bold */
strong .inline-code{
    color : #6495ed !important;
}



/* KaTeX Styles */

.katex * {
	color : #6495ed;
}

/* binary operator + */
.mbin {
	color : #dd0dff;
}

/* relative = */
.mrel, .mrel.mtight {
	color : #b5f735;
}

/* operators ∑ */
.mop {
	color : #835cfd;
}

/* super/sub script ^_ */
.mtight {
	color : #0defe0;
}

/* variables e n */
.mathnormal {
	color : #e08df2;
}

/* dividing line 1/2 */
.frac-line {
	color : #fdc185;
}

/* factorial closure */
.mclose {
	color : #dd3700;
}








/* Mermaid Styles */
div.mermaid {
	width : 100%;
	background-color : #241E25 !important;
	border-top-left-radius : 15px 15px;
	border-bottom-right-radius : 5% 5%;
	border-top-right-radius : 15px 15px;
	border : dashed;
	border-color : coral !important;
}



/* flowcharts */

/* node text labels */

svg[id^='mermaid-'] g.label {
	font-family : var(--mermaid-font-family);
	color : #6495ed !important;
	font-weight : bold;
}

svg[id^='mermaid-'] g.label text {
	fill : #0defe0 !important;
	font-weight : bold;
}



/* nodes */

svg[id^='mermaid-'] g.nodes > g.node > rect,
svg[id^='mermaid-'] g.nodes > g.node > circle,
svg[id^='mermaid-'] g.nodes > g.node > ellipse,
svg[id^='mermaid-'] g.nodes > g.node > polygon,
svg[id^='mermaid-'] g.nodes > g.node > path {
	fill : #081a28 !important;
	stroke : #835cfd !important;
	stroke-width : 3px;
}


svg[id^='mermaid-'] g.node.clickable {
	cursor : pointer;
}




/* center nodes */

svg[id^='mermaid-'] g.nodes > g.node > g.label {
	text-align : center;
}


svg[id^='mermaid-'] g.nodes > g.node > g.label div{
	margin-left : calc(-2%);
}

svg[id^='mermaid-'] g.nodes > g.node > g.label foreignObject{
	overflow : visible;
}





/* vector paths, terminators */


svg[id^='mermaid-'] path.arrowheadPath {
	fill : #dd0dff !important;
}

svg[id^='mermaid-'] g.edgePath path.path {
	stroke : #dd0dff !important;
}

svg[id^='mermaid-'] g.flowchart-link {
	stroke : coral !important;
	fill : none;
}





/* link / edgeLabels, bisecting vectors */



svg[id^='mermaid-'] g.edgeLabel > g.label > rect {
	opacity : 0.35 !important;
	background-color : #0defe0 !important;
	fill : #0defe0 !important;
}

svg[id^='mermaid-'] span.edgeLabel {
	background-color : #220828 !important;
	text-align : center;
	color : #e08df2 !important;
	font-weight : bold;
	border-left : 6px solid transparent;
	border-right : 6px solid transparent;
}

svg[id^='mermaid-'] span.edgeLabel:empty {
	border : none;
}






/* sequenceDiagram */


svg[id^='mermaid-'] > g > line.loopLine {
	stroke-width : 3px !important;
	stroke : #0defe0 !important;
	fill : #0defe0 !important;
}



/* vertical actor */
svg[id^='mermaid-'] > g > line.actor-line {
	stroke : #6495ed !important;
	stroke-width : 4.5px !important;
}

/* horizontal message / action - outer sequence number wrapper */
svg[id^='mermaid-'] > line[class^='messageLine'] {
	stroke : #dd0dff !important;
	stroke-width : 2.4px !important;
}

/* curved path / loop - inner sequence number wrapper */
svg[id^='mermaid-'] > path[class^='messageLine'] {
	stroke-width : 2.4 !important;
	stroke : #dd0dff !important;
}


/* vector arrowhead */

svg[id^='mermaid-'] #arrowhead path {
	stroke-width : 0.3px !important;
	stroke : #dd0dff !important;
	fill : #6495ed !important;
}





/* sequence diagram step numbers */

svg[id^='mermaid-'] > text.sequenceNumber {
	fill : #0defe0 !important;
	font-size : 15px !important;
	font-weight : bold !important;
}




/* horizontal message / action Text */

svg[id^='mermaid-'] > text.messageText {
	stroke-width : 0.3px !important;
	fill : #e08df2 !important;
	stroke : #6495ed !important;
}


/* loop box label text */

svg[id^='mermaid-'] .loopText,
svg[id^='mermaid-'] .loopText > tspan {
	stroke-width : 0.1px !important;
	fill : #0defe0 !important;
	stroke : #b5f735 !important;
}




/* actor container */

svg[id^='mermaid-'] g > rect.actor {
	fill : #081a28 !important;
	stroke : #835cfd !important;
	stroke-width : 3px !important;
}



/* actor text */

svg[id^='mermaid-'] g > text.actor > tspan {
	stroke-width : 0.33px !important;
	color : #6495ed !important;
	font-weight : bold;
	fill : #6495ed !important;
	stroke : #6495ed !important;
}


/* sub block labels - (par)allel, loop, (opt)ional */

svg[id^='mermaid-'] .labelBox {
	stroke : #0defe0 !important;
	fill : #081a28 !important;
	stroke-width : 0.6px !important;
}

/* sub block labels text - (par)allel, loop, (opt)ional */

svg[id^='mermaid-'] .labelText,
svg[id^='mermaid-'] .labelText > tspan {
	stroke-width : 0.33px !important;
	color : #6495ed !important;
	font-weight : bold;
	fill : #6495ed !important;
	stroke : #6495ed !important;
}

/* note box */
svg[id^='mermaid-'] rect.note {
	stroke : #fdc185 !important;
	fill : #092a0c !important;
	stroke-width : 1.5px !important;
}

/* note box text */

svg[id^='mermaid-'] text.noteText,
svg[id^='mermaid-'] text.noteText > tspan {
	color : #081A28 !important;
	fill : #0defe0 !important;
	stroke : #fff5ad !important;
	stroke-width : 0.05px !important;
}












/* stateDiagram */


/* state label text */

svg[id^='mermaid-'] span.nodeLabel {
    font-family : var(--mermaid-font-family);
    color : #6495ed !important;
    font-weight : bold;
}


svg[id^='mermaid-'] g.cluster-label > foreignObject{
  overflow : visible;
}



svg[id^='mermaid-']  .statediagram-cluster rect {
    background-color : #0defe0 !important;
    fill : #081a28 !important;
    stroke : #9370DB;
    stroke-width : 1px;
    stroke : #9370DB !important;
    stroke-width : 1px !important;
}

svg[id^='mermaid-'] .statediagram-cluster rect {
    fill : #081a28 !important;
    stroke : #9370DB;
    stroke-width : 1.5px !important;
}




svg[id^='mermaid-'] .statediagram-cluster rect.inner {
    stroke : #9370DB;
    stroke-width : 1px;
}


svg[id^='mermaid-'] .statediagram-cluster.statediagram-cluster .inner {
    fill : #270c2d !important;
}

svg[id^='mermaid-'] .statediagram-cluster.statediagram-cluster-alt .inner {
    fill : #081a28 !important;
}

svg[id^='mermaid-'] .statediagram-cluster rect {
    fill : #ECECFF;
    stroke : #9370DB;
    stroke-width : 1px;
}



/* vector paths, terminators */

/* vector path */
svg[id^='mermaid-']  .transition {
    stroke : #333333;
    stroke : #dd0dff !important;
    stroke-width : 1;
    fill : none;
}



svg[id^='mermaid-'] #statediagram-barbEnd path {
    stroke-width : 0.3px !important;
    stroke : #dd0dff !important;
    fill : #6495ed !important;
}



svg[id^='mermaid-'] .node circle.state-end {
    fill : #fc7007 !important;
}

svg[id^='mermaid-'] .node circle.state-start {
    fill : #0c2d0f !important;
}











/* Gantt chart styles */

/* chart title header */
svg[id^='mermaid-'] text.titleText {
    fill : #6495ed !important;
    font-weight : bold;
}

/* left section column title */
svg[id^='mermaid-'] text.sectionTitle > tspan{
    fill : #6495ed !important;
    font-weight : bold;
    font-size : 15px !important;
}

/* completed tasks (outside of pill, overridden by task text below) */
svg[id^='mermaid-']  .doneText0,
svg[id^='mermaid-']  .doneText1,
svg[id^='mermaid-']  .doneText2,
svg[id^='mermaid-']  .doneText3 {
    fill : #6495ed !important;
    font-weight : bold;
    stroke : #dd0dff !important;
}

/* gantt calendar dates */
svg[id^='mermaid-'] .grid .tick text {
    fill : #dd0dff !important;
}

/* task text */
svg[id^='mermaid-'] .taskText {
    font-size : 12px !important;
}

svg[id^='mermaid-']  .taskText0,
svg[id^='mermaid-']  .taskText1,
svg[id^='mermaid-']  .taskText2,
svg[id^='mermaid-']  .taskText3 {
    fill : #0c1e2d !important;
    font-weight : bold;
    stroke-width : 0.2px !important;
    stroke : #6495ed !important;
}

/* period - vertical lines */
svg[id^='mermaid-'] .grid .tick {
    stroke : #6495ed !important;
}

/* horizontal section background */
svg[id^='mermaid-'] .section {
    stroke : none;
    opacity : 0.25 !important;
}

/* horizontal section 0 background */
svg[id^='mermaid-'] .section0 {
    fill : #d1fa8e !important;
}

/* horizontal section 1,3 background */
svg[id^='mermaid-'] .section1,
svg[id^='mermaid-'] .section3 {
    fill : #78ff7d !important;
}

/* horizontal section 2 background */
svg[id^='mermaid-'] .section2 {
    fill : #ffd378 !important;
}

svg[id^='mermaid-'] .section1,
svg[id^='mermaid-'] .section3 {
}

svg[id^='mermaid-'] > g > text.doneCritText0,
svg[id^='mermaid-'] > g > text.doneCritText1,
svg[id^='mermaid-'] > g > text.doneCritText2,
svg[id^='mermaid-'] > g > text.doneCritText3 {
    fill : #6495ed !important;
    font-weight : bold;
    stroke-width : 0.2px !important;
    stroke : #6495ed !important;
}


svg[id^='mermaid-'] > g > text.activeCritText0,
svg[id^='mermaid-'] > g > text.activeCritText1,
svg[id^='mermaid-'] > g > text.activeCritText2,
svg[id^='mermaid-'] > g > text.activeCritText3 {
    fill : #6495ed !important;
    font-weight : bold;
    stroke-width : 0.2px !important;
    stroke : #6495ed !important;
}



svg[id^='mermaid-'] > g > text.taskTextOutsideRight {
    font-weight : bold;
    stroke-width : 0.2px !important;
    stroke : #7728ab !important;
    stroke-width : 0.6px !important;
    font-size : 16px !important;
}

svg[id^='mermaid-'] > g > text.taskTextOutsideLeft {
    font-weight : bold;
    stroke-width : 0.6px !important;
    stroke : #dd0dff !important;
    stroke : #7728ab !important;
    font-size : 16px !important;
}
